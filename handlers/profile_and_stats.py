import aiosqlite
from datetime import datetime
from aiogram import F, types, Router
from aiogram.filters import  Command, or_f
from database.models import DB_NAME
from handlers import user_private


profile_and_stats_router = Router()


@profile_and_stats_router.message(or_f(Command("profile"), (F.text.lower() == "–ø—Ä–æ—Ñ–∏–ª—å")))
async def cmd_profile(message: types.Message):
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    await user_private.update_last_active(message.from_user.id)
    
    try:
        async with aiosqlite.connect(DB_NAME) as db:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            cursor = await db.execute(
                "SELECT * FROM users WHERE telegram_id = ?",
                (message.from_user.id,)
            )
            user_data = await cursor.fetchone()
            
            if not user_data:
                await message.answer("‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ /start")
                return
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            reg_date = datetime.strptime(user_data[4], "%Y-%m-%d %H:%M:%S").strftime("%d.%m.%Y –≤ %H:%M")
            last_active = datetime.strptime(user_data[5], "%Y-%m-%d %H:%M:%S").strftime("%d.%m.%Y –≤ %H:%M")
            
            profile_text = (
                "üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
                f"üÜî <b>ID:</b> <code>{user_data[0]}</code>\n"
                f"üëÅÔ∏è <b>Username:</b> @{user_data[2] if user_data[2] else '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
                f"üìõ <b>–ò–º—è:</b> {user_data[1]}\n"
                #f"üåê <b>–Ø–∑—ã–∫:</b> {user_data[3].upper()}\n"
                f"üìÖ <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:</b> {reg_date}\n"
                f"üïí <b>–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b> {last_active}\n\n"
                f"<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ—Ç–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤!</i>"
            )
            
            await message.answer(profile_text, parse_mode="HTML")
            
    except aiosqlite.Error as e:
        print(f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as e:
        print(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

